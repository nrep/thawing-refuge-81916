<!DOCTYPE html>
<html>
    <head>
        <!-- Standard Meta -->
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">

        <!-- Site Properties -->
        <title>Dashboard - Sobanuka</title>
        <link rel="stylesheet" type="text/css" href="libs/semantic-ui-css/semantic.css"/>
        <link rel="stylesheet" type="text/css" href="styles/jquery.tagsinput.css" />
        <link rel="stylesheet" href="libs/dropzone/dropzone.css">

        <script src="scripts/jquery.min.js"></script>
        <script src="libs/semantic-ui-css/semantic.js"></script>
        <script src="scripts/vue.js"></script>
        <script src="scripts/feathers.js"></script>
        <script src="scripts/jquery.tagsinput.js"></script>
        <script src="scripts/core.min.js"></script>
        <script src="libs/dropzone/dropzone.js"></script>
        <script src="scripts/socket.io/socket.io.js"></script>
        <style>
            [v-cloak] {
                display: none;
            }
            main {
                padding-top: 6rem;
                margin-left: 3rem;
                margin-right: 3rem;
            }
            form {
                margin-left: 5rem;
                margin-right: 5rem;
            }

            body {
                background-color: #DADADA;
            }

            .image {
                margin-top: -100px;
            }

            #input-title {
                padding-right: -5rem;
            }
            #input-title {
                padding-left: -10px;
                margin-left: 0px;
            }

            #form-container {
                padding-bottom: 20px;
            }

            #nav,
            #footer {
                background-color: #052BC4;
            }

            #nav {
                box-shadow: 0px 0px 8px 0px;
            }

            #secondary-menu {
                display: none;
            }

            @media only screen and (max-width: 700px) {
                .ui.blue.fixed.menu {
                    display: none !important;
                }

                #secondary-menu {
                    display: flex;
                    box-shadow: 0px 0px 8px 0px grey;
                }

                .secondary.pointing.menu .item,
                .secondary.pointing.menu .menu {
                    display: block;
                }

                .secondary.pointing.menu .toc.item {
                    display: block;
                }

                #secondary-menu{
                    background-color: #0D47A1;
                }

                i.sidebar.icon {
                    color: rgba(255, 255, 255, 0.7);
                }

                i.sidebar.icon:hover {
                    color: white;
                }
            }

            #sidebar-menu {
                background: #0D47A1;
            }

            #search-box {
                padding-left: 1rem;
            }

            .main.container {
                margin-top: 7em;
            }

            img {
                height: 40px;
                width: 40px;
            }

            div.description {
                position: relative;
                bottom: 0.5rem;
            }

            div.content {
                position: relative;
                left: 4rem;
                bottom: 3rem;
                margin-bottom: -3rem;
            }

            div.content a.author {
                font-weight: bold;
            }

            .ui.text.container {
                max-width: 800px;
            }
            section.extra.content {
                position: relative;
                bottom: 2rem;
                margin-bottom: -5rem;
                left: 72%;
            }

            div.ui.segment.oni,
            #posts-head {
                margin-top: -1rem;
                margin-left: -1rem;
                margin-right: -1rem;
            }

            #posts-head {
                margin-bottom: -1rem;
            }

            #users-head {
                margin-left: -1rem;
                margin-right: -1rem;
                margin-top: -1rem;
                margin-bottom: 1.5rem;
            }

            #users-segment {
                margin-bottom: 2rem;
            }

            #create-post-btn {
                position: relative;
                bottom: 2rem;
                left: 76%;
            }

            div.ui.label {
                cursor: pointer;
            }
            #title-photo {
                min-height: 40px;
                max-height: 40px;
            }
        </style>
        <script>
            $(document)
                .ready(function() {
                    $('.ui.sidebar')
                        .sidebar('attach events', '.toc.item');
                });
        </script>
    </head>
    <body>
        <!-- Sidebar Menu -->
        <div class="ui vertical inverted sidebar menu" id="sidebar-menu">
            <a class="active item">Overview</a>
            <a class="item">Posts</a>
            <a class="item">Users</a>
            <a class="item">Comments</a>
            <a class="item">Notifications</a>
        </div>
        <div class="ui large secondary inverted pointing top fixed menu" id="secondary-menu">
            <span class="toc item">
                <a href="#">
                    <i id="sidebar-icon" class="sidebar icon"></i>
                </a>
                <span>Sobanuka</span>
            </span>
            <a class="right item">
                <i class="user icon"></i>
            </a>
        </div>
        <!--- Navigation bar -->
        <div class="ui inverted blue fixed menu" id="nav">
            <span class="toc item">
                <a href="#">
                    <i id="sidebar-icon" class="sidebar icon"></i>
                </a>
                <span>Sobanuka Overview</span>
            </span>
            <div class="right menu">
                <div class="item">
                    <div class="ui transparent inverted icon input" id="search-box">
                        <i id="main-search-icon" class="search icon"></i>
                    </div>
                </div>
                <a href="/login" class="item">
                    <i class="user icon"></i>
                </a>
            </div>
        </div>
        <div class="pusher">
            <main class="ui main content" id="main" role="main">
                <div class="ui middle aligned grid">
                    <div class="ui fluid container" id="main-container">
                        <div id="statistics-container" class="ui middle aligned text container">
                            <div v-bind:class="postsStats.color" class="ui raised circular segment">
                                <div v-bind:class="postsStats.color" class="ui statistic">
                                    <div class="value">
                                        {{ postsCount }}
                                    </div>
                                    <div class="label">
                                        <i v-bind:class="postsStats.iconColor" class="edit icon"></i>
                                        Posts
                                    </div>
                                </div>
                            </div>
                            <div v-bind:class="usersStats.color" class="ui raised circular segment">
                                <div v-bind:class="usersStats.color" class="ui statistic">
                                    <div class="value">
                                        {{ usersCount }}
                                    </div>
                                    <div class="label">
                                        <i v-bind:class="usersStats.iconColor" class="users icon"></i>
                                        Users
                                    </div>
                                </div>
                            </div>
                            <div v-bind:class="viewsStats.color" class="ui raised circular segment">
                                <div v-bind:class="viewsStats.color" class="ui statistic">
                                    <div class="value">
                                        0
                                    </div>
                                    <div class="label">
                                        <i v-bind:class="viewsStats.iconColor" class="eye icon"></i>
                                        Views
                                    </div>
                                </div>
                            </div>
                            <div v-bind:class="commentsStats.color" class="ui raised circular segment">
                                <div v-bind:class="commentsStats.color" class="ui statistic">
                                    <div class="value">
                                        0
                                    </div>
                                    <div class="label">
                                        <i v-bind:class="commentsStats.iconColor" class="comment icon"></i>
                                        Comments
                                    </div>
                                </div>
                            </div>
                            <div v-bind:class="notificationsStats.color" class="ui raised circular segment">
                                <div v-bind:class="notificationsStats.color" class="ui statistic">
                                    <div class="value">
                                        0
                                    </div>
                                    <div class="label">
                                        <i v-bind:class="notificationsStats.iconColor" class="comments icon"></i>
                                        Notifications
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div v-bind:class="postsStats.color" class="ui raised stacked segment">
                            <div id="posts-head" class="ui attached message">All Posts</div>
                            <a href="/dashboard/new" id="create-post-btn" class="ui green icon button">
                                <i class="plus icon"></i>
                                Create New Post
                            </a>
                            <div class="ui fluid segment oni" v-for="article of articles">
                                <img id="title-photo" v-bind:src="'/uploads/' + article.titlePic" alt="">
                                <div class="content">
                                    <a class="author"> {{ article.title }} </a>
                                    <div class="description"> {{ article.description }} </div>
                                    <section class="extra content">
                                        <div v-bind:id="'edit' + article._id" v-on:click.prevent="editPost(article)" v-bind:class="saveBtnColor" title="Edit" class="ui label">
                                            <i class="edit icon"></i>
                                        </div>
                                        <div v-bind:class="previewBtnColor" v-bind:id="'preview' + article._id" v-on:click.prevent="previewPost(article)"  title="Preview" class="ui label">
                                            <i class="eye icon"></i>
                                        </div>
                                        <div v-bind:id="'delete' + article._id" v-on:click.prevent="deletePost(article)" v-bind:class="deleteBtnColor" title="Delete" class="ui label">
                                            <i class="trash icon"></i>
                                        </div>
                                    </section>
                                </div>
                            </div>
                        </div>
                        <div v-bind:class="usersStats.color" class="ui raised stacked segment" id="users-segment">
                            <div id="users-head" class="ui attached message">All Users</div>
                            <div class="ui segment oni" v-for="user of users">
                                <img class="ui" src="images/bear-waving.jpg" alt="">
                                <div class="content">
                                    <a class="author"> {{ user.name }} </a>
                                    <div class="description"> {{ user.email }} </div>
                                    <section class="extra content">
                                        <div v-bind:class="saveBtnColor" title="Edit" class="ui label">
                                            <i class="edit icon"></i>
                                        </div>
                                        <div v-bind:class="previewBtnColor" title="Preview" class="ui label">
                                            <i class="eye icon"></i>
                                        </div>
                                        <div v-bind:id="'delete' + user._id" v-on:click.prevent="deleteUser(user)" v-bind:class="deleteBtnColor" title="Delete" class="ui label">
                                            <i class="trash icon"></i>
                                        </div>
                                    </section>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </main>
        </div>
        <script>
            // If no id is to be found in the storage
            // Tell the user to login first
            if (window.localStorage.getItem('sobanuka-account-id') === 'undefined') {
                document.getElementById('container').innerHTML = '<div class="ui middle aligned center aligned segment">Seems like you didn\'t login. Please <a href="/login">login</a> first.</div>';
            }

            const colors = [
                'red', 
                'orange', 
                'yellow', 
                'olive', 
                'green', 
                'teal', 
                'blue', 
                'violet', 
                'purple', 
                'pink',
                'brown',
                'grey',
                'black'
            ];

            function getRandomColor() {
                const color = colors[Math.floor(Math.random() * colors.length)];
                return color;
            }

            const client = feathers();
            const socket = io();
            client.configure(feathers.socketio(socket));
            client.configure(feathers.hooks());

            socket.emit('posts::find', { $select: ['_id', 'title', 'description', 'titlePic'] }, (error, results) => {
                vm.postsCount = results.data.length;
                vm.articles = results.data;
            });

            socket.emit('users::find', { $select: ['_id', 'name', 'email'] }, (error, results) => {
                vm.usersCount = results.data.length;
                vm.users = results.data;
            });

            let vm = new Vue({
                el: "#main-container",
                data: {
                    postsCount: 0,
                    usersCount: 0,
                    articles: [],
                    users: [],
                    postsStats: {
                        color: getRandomColor(),
                        iconColor: getRandomColor(),
                        labelColor: getRandomColor()
                    },
                    usersStats: {
                        color: getRandomColor(),
                        iconColor: getRandomColor(),
                        labelColor: getRandomColor()
                    },
                    viewsStats: {
                        color: getRandomColor(),
                        iconColor: getRandomColor(),
                        labelColor: getRandomColor()
                    },
                    commentsStats: {
                        color: getRandomColor(),
                        iconColor: getRandomColor(),
                        labelColor: getRandomColor()
                    },
                    notificationsStats: {
                        color: getRandomColor(),
                        iconColor: getRandomColor(),
                        labelColor: getRandomColor()
                    },
                    saveBtnColor: getRandomColor(),
                    deleteBtnColor:getRandomColor(),
                    previewBtnColor: getRandomColor()
                },
                methods: {
                    deletePost: function({ _id }) {
                        socket.emit('posts::remove', _id, (error, results) => {
                            socket.emit('posts::find', { $select: ['_id', 'title', 'description'] }, (error, results) => {
                                vm.postsCount = results.data.length;
                                vm.articles = results.data;
                            });
                            console.log(results);
                        });
                    },
                    deleteUser: function({ _id }) {
                        socket.emit('users::remove', _id, (error, results) => {
                            socket.emit('users::find', { $select: ['_id', 'name', 'email'] }, (error, results) => {
                                vm.usersCount = results.data.length;
                                vm.users = results.data;
                            });
                            console.log(results);
                        });
                    },
                    editPost: function({ _id }) {
                        window.localStorage.removeItem('article_id_to_edit');
                        window.localStorage.setItem('article_id_to_edit', _id);
                        window.location.assign('/dashboard/edit');
                    },
                    previewPost: function({ _id }) {
                        window.localStorage.removeItem('id-of-article-to-preview');
                        window.localStorage.setItem('id-of-article-to-preview', _id);
                        window.location.assign('/dashboard/preview');
                    }
                }
            });
        </script>
    </body>
</html>