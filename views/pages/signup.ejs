<!DOCTYPE html>
<html>
    <head>
        <!-- Standard Meta -->
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">

        <!-- Site Properties -->
        <title>Sign up - Sobanuka</title>
        <link rel="stylesheet" type="text/css" href="libs/semantic-ui-css/semantic.css">

        <script src="scripts/jquery.min.js"></script>
        <script src="libs/semantic-ui-css/semantic.js"></script>
        <script src="scripts/vue.js"></script>
        <script src="scripts/feathers.js"></script>
        <script src="scripts/socket.io/socket.io.js"></script>
        <script src="scripts/core.min.js"></script>
        <style type="text/css">
            body {
                background-color: #DADADA;
            }
            body > .grid {
                height: 100%;
            }
            .image {
                margin-top: -100px;
            }
            .column {
                max-width: 450px;
            }
            h2.blue .content {
                color: #0D47A1;
            }
    
            #signup-btn {
                background-color: #0869FA;
            }
        </style>
    </head>
    <body>
        <div class="ui middle aligned center aligned grid">
            <div class="column">
                <div class="ui icon attached message">
                    <i class="user icon"></i>
                    <div class="content">
                        <div class="header">
                           Create an account
                        </div>
                        <p>Enter your name, email, gender and password.</p>
                    </div>
                </div>
                <form class="ui form attached segment">
                    <div class="field">
                        <div class="ui left icon input">
                            <i class="user icon"></i>
                            <input id="input-name" type="name" name="name" placeholder="Full name">
                        </div>
                    </div>
                    <div class="field">
                        <div class="ui left icon input">
                            <i class="mail icon"></i>
                            <input id="input-email" type="email" name="email" placeholder="E-mail address">
                        </div>
                    </div>
                    <div class="field">
                        <div class="ui selection dropdown" id="select-gender">
                            <input type="hidden" name="gender">
                            <div class="default text">
                                Select Gender
                            </div>
                            <div class="menu">
                                <div class="item" data-value="male">
                                    <i class="male icon"></i>
                                    Male
                                </div>
                                <div class="item" data-value="female">
                                    <i class="female icon"></i>
                                    Female
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="field">
                        <div class="ui left icon input">
                            <i class="lock icon"></i>
                            <input id="input-password" type="password" name="password" placeholder="Password">
                        </div>
                    </div>
                    <div id="signup-btn" class="ui fluid primary button" @click="createAccount"> {{ message }} </div>
                    <div id="error-div" class="ui error message"></div>
                </form>
                <div class="ui icon blue bottom attached message">
                    <div class="content">
                        Already have an account?
                        <a href="/login">Login here</a>.
                    </div>
                </div>
            </div>
        </div>
        <script>
            // Initialize the gender dropdown
            $(document).ready(function() {
                $('.ui.selection.dropdown').dropdown();
                $('.ui.menu .ui.dropdown').dropdown({
                    on: 'hover'
                });
            });

            // Initialize socket
            const socket = io();
            // Initialize the client
            const client = feathers();
            client.configure(feathers.socketio(socket));
            client.configure(feathers.hooks());

            // Function to check if no input is empty
            let noInputIsEmpty = () => {

                // Reference to DOM elements
                const errorDiv = document.getElementById('error-div');
                const inputedName = document.getElementById('input-name').value;
                const inputedPassword = document.getElementById('input-password').value;
                const inputedEmail = document.getElementById('input-email').value;

                // Validate iputed name
                if (inputedName != null & inputedName != 'undefined' & inputedName != '') {
                    // If name not empty, null or undefined,
                    // Then validate email
                    if (inputedEmail != null & inputedEmail != 'undefined' & inputedEmail != '') {
                        // If email not empty, null or undefined
                        // Then validate gender
                        if ($('#select-gender').dropdown('get value') === 'male' || $('#select-gender').dropdown('get value') === 'female') {
                            // If the above condition is found to be true
                            // Validate the password
                            if (inputedPassword != null & inputedPassword != 'undefined' & inputedPassword != '') {
                                // If password not empty, null or undefined
                                // Then do this
                                return true;
                            }

                            // If password is found to be empty, null or undefined
                            // Tell the user to enter it before hitting the create account button
                            errorDiv.innerText = 'Please enter password and hit the create account button to continue';
                            errorDiv.style.display = 'block';

                            // Reset the button's text to 'Create account'
                            vm.message = 'Create Account';
                            // Then log it
                            console.log('Please enter password and hit the create account button to continue');
                            return false;
                        }

                        // If password is found to be empty, null or undefined
                        // Tell the user to enter it before hitting the create account button
                        errorDiv.innerText = 'Please select gender, then enter password and hit the create account button to continue';
                        errorDiv.style.display = 'block';

                        // Reset the button's text to 'Create account'
                        vm.message = 'Create Account';
                        // Then log it
                        console.log('Please select gender, then enter password and hit the create account button to continue');
                        return false;

                        // Then return false
                        return false;
                    }

                    // If email is found to be empty, null or undefined
                    // Tell the user to enter it before hitting the create account button
                    errorDiv.innerText = 'Please enter email first, select gender, then enter password and hit the create account button to continue';
                    errorDiv.style.display = 'block';

                    // Reset the button's text to 'Create account'
                    vm.message = 'Create Account';
                    // Then log it
                    console.log('Please enter email first, select gender, then enter password and hit the create account button to continue');

                    // Then return false
                    return false;
                }

                // If name is found to be empty, null or undefined
                // Tell the user to enter it before hitting the create account button
                errorDiv.innerText = 'Please enter name first, email, select gender, then enter password and hit the create account button to continue';
                errorDiv.style.display = 'block';

                // Reset the button's text to 'Create account'
                vm.message = 'Create Account';
                // Then log it
                console.log('Please enter name first, email, select gender, then enter password and hit the create account button to continue');

                // Return false by default
                // This means that no name has been inputed
                // We return false before even checking inputed email and password
                return false;
            }

            // Initialize vm
            const vm = new Vue({
                // Watch the signup button
                el: "#signup-btn",
                // Declare data
                data: {
                    // Initialize the message data
                    message: 'Create Account'
                },
                // Declare vm methods
                methods: {
                    // Function to create account
                    createAccount: function(evt) {
                        // Set the button text
                        this.message = 'Creating Account...'
                        // Check if no input is empty
                        if (noInputIsEmpty()) {
                            // Create an account
                            socket.emit('users::create', {
                                name: document.getElementById('input-name').value,
                                email: document.getElementById('input-email').value,
                                password: document.getElementById('input-password').value,
                                role: 'user',
                                _id: document.getElementById('input-email').value,
                                gender: $('#select-gender').dropdown('get value')
                            }, (error, result) => {
                                // Then if the account is created
                                // Save the id in localstorage
                                // But try to remove the one from the localstorage, if it is there
                                window.localStorage.removeItem('sobanuka-account-id');
                                window.localStorage.setItem('sobanuka-account-id', result._id);

                                // Go to the dashboard
                                window.location.assign('/dashboard');

                                // Then log the created account
                                console.log('Account created: ', result);
                            });
                        }
                    }
                }
            });
        </script>
    </body>
</html>