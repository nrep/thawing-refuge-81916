<!DOCTYPE html>
<html>
    <head>
        <!-- Standard Meta -->
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">

        <!-- Site Properties -->
        <title>Login - Sobanuka</title>
        <link rel="stylesheet" type="text/css" href="libs/semantic-ui-css/semantic.css">

        <script src="scripts/jquery.min.js"></script>
        <script src="scripts/transition.js"></script>
        <script src="scripts/vue.js"></script>
        <script src="scripts/feathers.js"></script>
        <script src="scripts/socket.io/socket.io.js"></script>
        <script src="scripts/core.min.js"></script>
        <style type="text/css">
            [v-cloak] {
                display: none;
            }
            body {
                background-color: #DADADA;
            }
            body > .grid {
                height: 100%;
            }
            .image {
                margin-top: -100px;
            }
            .column {
                max-width: 450px;
            }
            h2.blue .content {
                color: #0D47A1;
            }
    
            #login-btn {
                background-color: #0869FA;
            }
            #email-error {
                display: none;
            }
            .field .input {
                border-color: rgba(12, 33, 192, 0.5);
                border-style: solid;
                border-width: .025em;
                border-radius: .2rem;
            }
            .field .input .icon {
                color: rgba(12, 33, 192, 0.91);
            }
        </style>
    </head>
    <body>
        <div class="ui middle aligned center aligned grid">
            <div class="column">
                <div class="ui icon attached message">
                    <i class="user icon"></i>
                    <div class="content">
                        <div class="header">
                            Log in to your account
                        </div>
                        <p>Enter your account's email and password</p>
                    </div>
                </div>
                <form class="ui form attached segment">
                    <div class="field">
                        <div class="ui left icon input">
                            <i class="user icon"></i>
                            <input id="input-email" type="text" name="email" placeholder="E-mail address">
                        </div>
                    </div>
                    <div class="field">
                        <div class="ui left icon input">
                            <i class="lock icon"></i>
                            <input id="input-password" type="password" name="password" placeholder="Password">
                        </div>
                    </div>
                    <div id="login-btn" class="ui fluid primary button" @click="signIn"> {{ message }} </div>
                    <div id="error-div" class="ui error message"></div>
                </form>
                <div class="ui icon blue bottom attached message">
                    <div class="content">
                            Don't have an account?
                        <a href="/signup">Create one</a>.
                    </div>
                </div>
            </div>
        </div>
        <script>
            // Initialize socket
            const socket = io('http://localhost:3030');
            // Initialize the client
            const client = feathers();
            client.configure(feathers.socketio(socket));
            client.configure(feathers.hooks());

            // Function to check if no input is empty
            let noInputIsEmpty = () => {
                // Reference to DOM elements
                const errorDiv = document.getElementById('error-div');
                const inputedPassword = document.getElementById('input-password').value;
                const inputedEmail = document.getElementById('input-email').value;

                // Validate iputed email
                if (inputedEmail != null & inputedEmail != 'undefined' & inputedEmail != '') {
                    // If email not empty, null or undefined,
                    // Then validate password
                    if (inputedPassword != null & inputedPassword != 'undefined' & inputedPassword != '') {
                        // If password not empty, null or undefined
                        // Then do this
                        return true;
                    }

                    // If password is found to be empty, null or undefined,
                    // Tell the user to enter it before hitting the login button
                    errorDiv.innerText = 'Please enter password and hit the login button to continue';
                    errorDiv.style.display = 'block';

                    // Reset the button's text to 'Login'
                    vm.message = 'Login';
                    // Then log it
                    console.log('Please enter password and hit the login button to continue');
                    // Then return false as well
                    return false;
                }

                // If email is found to be empty, null or undefined,
                // Tell the user to enter it before hitting the login button
                errorDiv.innerText = 'Please enter your account\'s email first, then password and hit the login button to continue';
                errorDiv.style.display = 'block';

                // Reset the button's text to 'Login'
                vm.message = 'Login';
                // Then log it
                console.log('Please enter your account\'s email first, then password and hit the login button to continue');

                // Return false by default
                return false;
            }

            // Function to check if the account exists
            const accountExists = (users) => {
                // Check if no text box is empty
                if (noInputIsEmpty()) {
                    // Reference to DOM elements
                    const errorDiv = document.getElementById('error-div');
                    const inputedPassword = document.getElementById('input-password').value;
                    const inputedEmail = document.getElementById('input-email').value;

                    // If not empty, iterate over the users params
                    for (user of users) {
                        // Check if the current user email matches the inputed email
                        if (user.email === inputedEmail) {
                            // If it matches then show it to the user
                            errorDiv.innerText = 'Account email found in the database';
                            errorDiv.classList.remove('error');
                            errorDiv.classList.add('success');
                            errorDiv.style.display = 'block';

                            // Then log it
                            console.log('Account email found in the database');

                            // Check that also password matches
                            if (user.password === inputedPassword) {
                                // If it matches then show it to the user
                                errorDiv.innerText = 'Account email found in the database';
                                errorDiv.classList.remove('error');
                                errorDiv.classList.add('success');
                                errorDiv.style.display = 'block';

                                // Save the id in localstorage
                                window.localStorage.setItem('sobanuka-account-id', user._id);
                                
                                // Then log this
                                console.log('Password matches as well');
                                // Then return true
                                return true;
                            } 

                            // If it doesn't match then show the error to the user
                            errorDiv.innerText = 'Invalid password. Please enter valid email and password to continue.';
                            errorDiv.classList.remove('success');
                            errorDiv.classList.add('error');
                            errorDiv.style.display = 'block';
                            // Reset the button's text to 'Login'
                            vm.message = 'Login';
                            // Then log it
                            console.log('Whew! Password doesn\'t match');

                            // Then return false
                            return false;
                        }
                    }

                    // If no account has matched then show the error to the user
                    errorDiv.innerText = 'No account found. Please create an account first';
                    errorDiv.style.display = 'block';
                    // Reset the button's text to 'Login'
                    vm.message = 'Login';
                    console.log('No account found. Please create an account first');
                    // Return false by default
                    return false;
                }
            }

            // Initialize vm
            let vm = new Vue({
                // Watch the login button
                el: "#login-btn",
                // Declare data
                data: {
                    // Initialize the message data
                    message: 'Login'
                },
                // Declare vm methods
                methods: {
                    // Function to signin
                    signIn: function() {
                        // Set the button text
                        this.message = 'Logging In...';
                        socket.emit('users::find', { $select: ['_id', 'email', 'name', 'password'] }, (error, result) => {
                            console.log(result);
                            const users = result.data;
                            const { _id, email, name } = users;
                            // Check if account exists
                            if (accountExists(users)) {

                                console.log(window.localStorage.getItem('sobanuka-account-id'));
                                // Then go to the dashboard
                                window.location.assign('/dashboard');
                            }
                        });
                    }
                }
            });
        </script>
    </body>
</html>